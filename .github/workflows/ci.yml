name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build Next app (root)
        run: npm run build
 
      - name: Check @apply violations
        run: node scripts/check-apply.js

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci
 
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
 
      - name: Build Next app (root)
        run: npm run build
 
      - name: Start static server (exported site)
        run: |
          npm run build
          npx serve -l 3000 out &
          npx wait-on http://127.0.0.1:3000
 
      - name: Run Smoke + A11y + Visual tests (Playwright)
        run: npx playwright test -c tests/playwright.next.config.ts

      - name: Upload Playwright report & screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            playwright-report
            test-results
            tests/__screenshots__
 
      - name: Lighthouse CI
        run: npx @lhci/cli autorun --config=./lighthouserc.json

      - name: Update Browserslist DB (non-blocking)
        run: npx update-browserslist-db@latest || true

      - name: Comment Preview URL (requires hosting secrets)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `${github.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const preview = process.env.PREVIEW_URL || '(configure Vercel/Netlify in CI to post a real preview)';
            const body = `Preview URL: ${preview}\n\nCI run: ${runUrl}\n\n` +
              `If using Vercel, add secrets VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID.\n` +
              `If using Netlify, add secrets NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID.`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
